//---------------------------------------------------------------------------
/*******************************************************
Nom ......... : tapiris.h
Role ........ : faire les actions demandé par l'utilisateur sur le tapis
Auteur ...... : Colin.B
Version ..... : V1.1 du 03/05/2019

Compilation : c++ builder
********************************************************/
//---------------------------------------------------------------------------

#ifndef tapirisH
#define tapirisH
#include "../include/modBus/modBus.h"
#include "../include/vector/Vector.h"

using namespace std;

//---------------------------------------------------------------------------

class tapiris
{
	private:
		struct ThreadDataTapiris
		{
			int piston;
			tapiris * tapis;
			ThreadDataTapiris(int piston, tapiris * tapis)
			{
				this->piston = piston;
				this->tapis = tapis;
			}
		};
//		struct ThreadDataCaisse
//		{
//			int caisse
//			tapiris * tapis;
//			ThreadDataCaisse(int caisse, tapiris * tapis)
//			{
//				this->caisse = caisse;
//				this->tapis = tapis;
//			}
//		};

		bool etatCapteur;
		Vector<int> vpiston;
		modBus * pmodBus;
		DWORD dwChars;
		HANDLE Thread;
	public:
		tapiris();
		~tapiris();
		bool connected(string adress, unsigned short port);
		void disconnect();
		bool activePiston(int piston);
		bool deactivatePiston(int piston);
		bool activeTapis();
		bool deactivateTapis();
		void newDrug(int caisse);
		static DWORD WINAPI piston(LPVOID lpParam);
		static DWORD WINAPI capteur(LPVOID lpParam);
};

#endif
