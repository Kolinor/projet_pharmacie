//---------------------------------------------------------------------------
#pragma hdrstop
#include "BilanExcel.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------

// Création du fichier template Excel s'il n'existe pas deja
Excel::Excel()
{
	ofstream fichierBilan("D:/Utilisateur/Kevin/Bureau/Bilan des ventes.csv", ios::out | ios::trunc) ;

	if (fichierBilan)
	{
		fichierBilan << "Médicaments" << ";;" << "Quantité vendu" << ";;" << "Prix unitaire (en €)" << ";;" << "Prix totale (en €)" << endl ;
	}

	else
		cerr << "Erreur à l'ouverture du fichier Bilan des ventes" << endl ;
}

// - Les variables remplace temporairement les informations à allez chercher en base de données
// - Un fois la liaison BDD éfféctué il faut mettre en place un while afin de récuperer les info en BDD tans qu'il reste des ID
void  Excel::recupererInformations()
{
	std::string nomMedicament = "Doliprane" ;
	long quantiteVendu = 35000 ;
	double prixUnitaire = 4.95 ;
	long double prixUnitaireTotale = quantiteVendu * prixUnitaire ;

	ecrireInformations(nomMedicament, quantiteVendu, prixUnitaire, prixUnitaireTotale);
}

// Inscription des informations dans le fichier Excel
void Excel::ecrireInformations(std::string nomMedicament, long quantiteVendu, double prixUnitaire, long double prixUnitaireTotale)
{
	ofstream fichierBilan("D:/Utilisateur/Kevin/Bureau/Bilan des ventes.csv", ios::out | ios::app) ;
	fichierBilan << nomMedicament.c_str() << ";;" ;
	fichierBilan << quantiteVendu << ";;" ;
	fichierBilan << prixUnitaire << ";;" ;
	fichierBilan << prixUnitaireTotale << endl;
	fichierBilan.close();
}
