//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop
#include "IHM_Bilan.h"
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm_Bilan *Form_Bilan;
//---------------------------------------------------------------------------

__fastcall TForm_Bilan::TForm_Bilan(TComponent* Owner) : TForm(Owner)
{
}
//---------------------------------------------------------------------------

void __fastcall TForm_Bilan::FormCreate(TObject *Sender)
{
	FDQuery1->Open("SELECT * FROM `Medicament` WHERE `Quantite_Restante` != 0");

	for (int i = 0; i < FDQuery1->RowsAffected; i++)
	{
		ComboBox_Medicament->Items->Add(DataSource1->DataSet->FieldByName("Nom_Medicament")->AsString);
		DataSource1->DataSet->FindNext();
	}

	BDD = new MysqlPharmacieManager() ;
}
//---------------------------------------------------------------------------

void __fastcall TForm_Bilan::Bouton_TelechargerClick(TObject *Sender)
{
	/*
	vector < vector<string> > bilan ;

	if (ComboBox_Periode->Text != "Période de vente" )
	{
		if (ComboBox_Medicament->Text != "Médicament" )
		{
			String Medicament = ComboBox_Medicament->Text ;
		}
		String Periode = ComboBox_Periode->Text ;

		if (ComboBox_Periode->Text == "Jour" )
		{
			// Appele de la méthode pour DL le bilan du jour
		}

		else if (ComboBox_Periode->Text == "Semaine" )
		{
			// Appele de la méthode pour DL le bilan de la semaine
		}

		else if (ComboBox_Periode->Text == "Mois" )
		{
			// Appele de la méthode pour DL le bilan du mois
		}

		else if (ComboBox_Periode->Text == "Année" )
		{
			// Appele de la méthode pour DL le bilan de l'année
			bilan = BDD->BilanAnnee();

			for(int i(0); i < 3; ++i) {
			 for(int j(0); j < 2; ++j) {
			 string req = bilan[i][j] ;
			 }
			}
					}

		Form_Bilan->Visible = false ;
	}

	else
	{
		Label_Periode->Visible = true ;
	}
	*/

	vector < vector<string> > bilan ;
	bilan = BDD->BilanAnnee();

	for(int i(0); i < 3; ++i)
	{
		for(int j(0); j < 2; ++j)
		{

			// Memo->Lines->Add(c_str(bilan)) ;
			// Memo->Lines->Add(("some text "+bilan+" some text").c_str());
			// cout << M[i][j] << " ";


//				int reqLength = wcslen(wStrReq);
//				char * req = new char[reqLength + 1];
//				wcstombs(req, wStrReq, reqLength);
//				bilan=this->mySql->select(req);
//				return bilan ;
		}

		Memo->Lines ++ ;
	}
}
//---------------------------------------------------------------------------

