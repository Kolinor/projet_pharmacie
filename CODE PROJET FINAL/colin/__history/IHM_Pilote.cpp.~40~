//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "IHM_Pilote.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TIHM *IHM;
//---------------------------------------------------------------------------
__fastcall TIHM::TIHM(TComponent* Owner)
	: TForm(Owner)
{
	listener = new SynchroEventListener();
	parser = new LineParser();

	UnicodeString test = "COM1";
	wchar_t * COM = test.c_str();
	int len = wcslen(COM);
	char * conversion = new char[len + 1];
	wcstombs(conversion, COM, len);
	conversion[len] = '\0';
	com = new CRS232(conversion,115200,8,NOPARITY,ONESTOPBIT, parser);
//	if (com->ouverture() == false) {
//		IHM->Close();
//	}

}
//---------------------------------------------------------------------------

void __fastcall TIHM::Button1Click(TObject *Sender)
{
	pTapiris->activePiston(1,0);
	pTapiris->activePiston(2,0);
}
//---------------------------------------------------------------------------

void __fastcall TIHM::btnAllumerTapisClick(TObject *Sender)
{
	pTapiris->activeTapis();
	btnAllumerTapis->Visible = false;
	btnEteindreTapis->Visible = true;
}
//---------------------------------------------------------------------------

void __fastcall TIHM::btnEteindreTapisClick(TObject *Sender)
{
	pTapiris->deactivateTapis();
	btnAllumerTapis->Visible = true;
	btnEteindreTapis->Visible = false;
}
//---------------------------------------------------------------------------

void __fastcall TIHM::btnConnexionClick(TObject *Sender)
{
	wchar_t* ip = edtIp->Text.c_str();
	wstring ws(ip);
	string strIp(ws.begin(), ws.end());
	pTapiris = new tapiris();


	if (pTapiris->connected(strIp,edtPort->Text.ToInt()) == true) {



		shpConnexion->Brush->Color = clLime;
		btnConnexion->Visible = false;
		btnDéconnexion->Visible = true;
		Action->Visible = true;
		Etat->Visible = true;

		pTapiris->activeCapteur();
		//threadEtat
		pThreadEtat = new threadEtat(false, pTapiris);
	}
	else
	{
		 MessageBox(
		  NULL,
		  "Ip ou/et port non connue(s)",
		  NULL,
		  MB_OK);
		shpConnexion->Brush->Color = clRed;
		Action->Visible = false;
		Etat->Visible = false;
	}
}
//---------------------------------------------------------------------------

void __fastcall TIHM::btnDéconnexionClick(TObject *Sender)
{
	pTapiris->deactivateCapteur();
	pTapiris->deactivateTapis();
	delete pThreadEtat;
	pThreadEtat = NULL;
	delete pTapiris;

	shpConnexion->Brush->Color = clRed;
	btnDéconnexion->Visible = false;
	btnConnexion->Visible = true;
	Action->Visible = false;
	btnAllumerTapis->Visible = true;
	btnEteindreTapis->Visible = false;
	Etat->Visible = false;

}
//---------------------------------------------------------------------------

void __fastcall TIHM::Button7Click(TObject *Sender)
{
	pTapiris->newDrug(Edit1->Text.ToInt());
}

//---------------------------------------------------------------------------

void __fastcall TIHM::FormClose(TObject *Sender, TCloseAction &Action)
{
	if (btnConnexion->Visible == false) {
		this->btnDéconnexionClick(Sender);
	}
}
//---------------------------------------------------------------------------

void __fastcall TIHM::btnNouveauMédicamentClick(TObject *Sender)
{
	pTapiris->activePiston(3,0);
}
//---------------------------------------------------------------------------

void __fastcall TIHM::Button2Click(TObject *Sender)
{

	Label3->Caption = "test";
//	Label2->Caption = com->vectorCodeBarre();

}
//---------------------------------------------------------------------------

void __fastcall TIHM::Timer1Timer(TObject *Sender)
{
	while (listener->getMessages().Size() > 0)
	{
		Message * msg = listener->getMessages().Get();
		this->Memo_RS232->Lines->Add("Ligne reçue : ");
		UnicodeString str = UnicodeString();
		for (int i = 0; i < msg->getData().size(); i++)
		{
			str += msg->getData()[i];
		}
		this->Memo_RS232->Lines->Add(str);
		delete msg;
	}
}
//---------------------------------------------------------------------------

